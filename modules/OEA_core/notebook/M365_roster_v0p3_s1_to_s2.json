{
	"name": "M365_roster_v0p3_s1_to_s2",
	"properties": {
		"folder": {
			"name": "3) sandbox/archive/s1_to_s2"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "spark2v3",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/7b9a4896-4541-483f-bdc7-d8f4ec6be3ee/resourceGroups/rg-oea-CISD3GG1/providers/Microsoft.Synapse/workspaces/syn-oea-cisd3gg1/bigDataPools/spark2v3",
				"name": "spark2v3",
				"type": "Spark",
				"endpoint": "https://syn-oea-cisd3gg1.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark2v3",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.0",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28
			}
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Process all roster data from stage1/M365/inbound/roster into stage 2 in delta lake format.\r\n",
					"(overwrites previously loaded data with the latest snapshot data)"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"tags": [
						"parameters"
					]
				},
				"source": [
					"storage_account = 'stoeacisd3gg1'\r\n",
					"file_path = '/M365/inbound/roster/2021-06-15T04-04-12'"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"stage1 = 'abfss://stage1@' + storage_account + '.dfs.core.windows.net'\r\n",
					"stage2 = 'abfss://stage2@' + storage_account + '.dfs.core.windows.net'\r\n",
					"stage3 = 'abfss://stage3@' + storage_account + '.dfs.core.windows.net'"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"from pyspark.sql.types import StructType, StructField, StringType, IntegerType, DoubleType, ArrayType, TimestampType, BooleanType\r\n",
					"\r\n",
					"#AadUser\r\n",
					"schema = StructType([StructField('ObjectId', StringType()),StructField('AnchorId', StringType()),StructField('DisplayName', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('GivenName', StringType()),StructField('LastSeenDateTime', TimestampType()),StructField('Mail', StringType()),StructField('MailNickname', StringType()),StructField('Role', StringType()),StructField('Surname', StringType()),StructField('UserPrincipalName', StringType()),StructField('StudentId', StringType()),StructField('TeacherId', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/AadUser', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/AadUser')\r\n",
					"#AadUserPersonMapping\r\n",
					"schema = StructType([StructField('ObjectId', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('LastSeenDateTime', TimestampType()),StructField('PersonId', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/AadUserPersonMapping', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/AadUserPersonMapping')\r\n",
					"#Course\r\n",
					"schema = StructType([StructField('Id', StringType()),StructField('AcademicYearSessionId', StringType()),StructField('ExternalId', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('IsActiveInSession', BooleanType()),StructField('LastSeenDateTime', TimestampType()),StructField('Name', StringType()),StructField('OrganizationId', StringType()),StructField('SourceSystemId', StringType()),StructField('Code', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/Course', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/Course')\r\n",
					"#CourseGradeLevel\r\n",
					"schema = StructType([StructField('Id', StringType()),StructField('CourseId', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('RefGradeLevelId', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/CourseGradeLevel', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/CourseGradeLevel')\r\n",
					"#CourseSubject\r\n",
					"schema = StructType([StructField('Id', StringType()),StructField('CourseId', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('RefAcademicSubjectId', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/CourseSubject', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/CourseSubject')\r\n",
					"#Enrollment\r\n",
					"schema = StructType([StructField('Id', StringType()),StructField('ExternalId', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('IsActiveInSession', BooleanType()),StructField('LastSeenDateTime', TimestampType()),StructField('PersonId', StringType()),StructField('RefSectionRoleId', StringType()),StructField('SectionId', StringType()),StructField('SourceSystemId', StringType()),StructField('EntryDate', StringType()),StructField('ExitDate', StringType()),StructField('IsPrimaryStaffForSection', BooleanType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/Enrollment', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/Enrollment')\r\n",
					"#Organization\r\n",
					"schema = StructType([StructField('Id', StringType()),StructField('ExternalId', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('LastSeenDateTime', TimestampType()),StructField('Name', StringType()),StructField('RefOrganizationTypeId', StringType()),StructField('SourceSystemId', StringType()),StructField('Identifier', StringType()),StructField('ParentOrganizationId', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/Organization', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/Organization')\r\n",
					"#Person\r\n",
					"schema = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('LastSeenDateTime', TimestampType()),StructField('GivenName', StringType()),StructField('MiddleName', StringType()),StructField('PreferredGivenName', StringType()),StructField('PreferredMiddleName', StringType()),StructField('PreferredSurname', StringType()),StructField('Surname', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/Person', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/Person')\r\n",
					"#PersonDemographic\r\n",
					"schema = StructType([StructField('PersonId', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('BirthCity', StringType()),StructField('BirthCountryCode', StringType()),StructField('BirthDate', StringType()),StructField('BirthState', StringType()),StructField('RefSexId', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/PersonDemographic', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/PersonDemographic')\r\n",
					"#PersonDemographicEthnicity\r\n",
					"schema = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('PersonId', StringType()),StructField('RefEthnicityId', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/PersonDemographicEthnicity', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/PersonDemographicEthnicity')\r\n",
					"#PersonDemographicPersonFlag\r\n",
					"schema = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('PersonId', StringType()),StructField('RefPersonFlagId', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/PersonDemographicPersonFlag', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/PersonDemographicPersonFlag')\r\n",
					"#PersonDemographicRace\r\n",
					"schema = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('PersonId', StringType()),StructField('RefRaceId', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/PersonDemographicRace', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/PersonDemographicRace')\r\n",
					"#PersonEmailAddress\r\n",
					"schema = StructType([StructField('Id', StringType()),StructField('EmailAddress', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('PersonId', StringType()),StructField('PriorityOrder', IntegerType()),StructField('RefEmailAddressTypeId', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/PersonEmailAddress', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/PersonEmailAddress')\r\n",
					"#PersonIdentifier\r\n",
					"schema = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('Identifier', StringType()),StructField('IsPresentInSource', BooleanType()),StructField('PersonId', StringType()),StructField('RefIdentifierTypeId', StringType()),StructField('SourceSystemId', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/PersonIdentifier', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/PersonIdentifier')\r\n",
					"#PersonOrganizationRole\r\n",
					"schema = StructType([StructField('Id', StringType()),StructField('ExternalId', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('IsActiveInSession', BooleanType()),StructField('LastSeenDateTime', TimestampType()),StructField('OrganizationId', StringType()),StructField('PersonId', StringType()),StructField('RefRoleId', StringType()),StructField('SessionId', StringType()),StructField('SourceSystemId', StringType()),StructField('IsPrimary', BooleanType()),StructField('RefGradeLevelId', StringType()),StructField('RoleEndDate', StringType()),StructField('RoleStartDate', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/PersonOrganizationRole', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/PersonOrganizationRole')\r\n",
					"#PersonPhoneNumber\r\n",
					"schema = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('PersonId', StringType()),StructField('PhoneNumber', StringType()),StructField('PriorityOrder', IntegerType()),StructField('RefPhoneNumberTypeId', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/PersonPhoneNumber', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/PersonPhoneNumber')\r\n",
					"#PersonRelationship\r\n",
					"schema = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('PersonId', StringType()),StructField('RefPersonRelationshipId', StringType()),StructField('RelatedPersonId', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/PersonRelationship', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/PersonRelationship')\r\n",
					"#RefDefinition\r\n",
					"schema = StructType([StructField('Id', StringType()),StructField('Code', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('LastSeenDateTime', TimestampType()),StructField('Namespace', StringType()),StructField('RefType', StringType()),StructField('SortOrder', IntegerType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/RefDefinition', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/RefDefinition')\r\n",
					"#Section\r\n",
					"schema = StructType([StructField('Id', StringType()),StructField('ExternalId', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('LastSeenDateTime', TimestampType()),StructField('Name', StringType()),StructField('OrganizationId', StringType()),StructField('SourceSystemId', StringType()),StructField('Code', StringType()),StructField('CourseId', StringType()),StructField('Location', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/Section', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/Section')\r\n",
					"#SectionGradeLevel\r\n",
					"schema = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('RefGradeLevelId', StringType()),StructField('SectionId', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/SectionGradeLevel', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/SectionGradeLevel')\r\n",
					"#SectionSession\r\n",
					"schema = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('IsActiveInSession', BooleanType()),StructField('LastSeenDateTime', TimestampType()),StructField('SectionId', StringType()),StructField('SessionId', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/SectionSession', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/SectionSession')\r\n",
					"#SectionSubject\r\n",
					"schema = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('RefAcademicSubjectId', StringType()),StructField('SectionId', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/SectionSubject', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/SectionSubject')\r\n",
					"#Session\r\n",
					"schema = StructType([StructField('Id', StringType()),StructField('EndDate', StringType()),StructField('ExternalId', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('LastSeenDateTime', TimestampType()),StructField('Name', StringType()),StructField('RefAcademicYearId', StringType()),StructField('RefSessionTypeId', StringType()),StructField('SourceSystemId', StringType()),StructField('StartDate', StringType()),StructField('ParentSessionId', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/Session', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/Session')\r\n",
					"#SourceSystem\r\n",
					"schema = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('LastSeenDateTime', TimestampType()),StructField('Name', StringType())])\r\n",
					"df = spark.read.csv(stage1 + file_path + '/SourceSystem', header='false', schema=schema)\r\n",
					"df.write.format('delta').mode('overwrite').save(stage2 + '/M365/SourceSystem')\r\n",
					"\r\n",
					""
				],
				"execution_count": 3
			}
		]
	}
}
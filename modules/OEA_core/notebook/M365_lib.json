{
	"name": "M365_lib",
	"properties": {
		"folder": {
			"name": "2) OEA Framework/Modules/M365"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "spark2v3",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/7b9a4896-4541-483f-bdc7-d8f4ec6be3ee/resourceGroups/rg-oea-CISD3GG1/providers/Microsoft.Synapse/workspaces/syn-oea-cisd3gg1/bigDataPools/spark2v3",
				"name": "spark2v3",
				"type": "Spark",
				"endpoint": "https://syn-oea-cisd3gg1.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark2v3",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.0",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"from pyspark.sql.types import StructType, StructField, StringType, IntegerType, DoubleType, ArrayType, TimestampType, BooleanType"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Variables\r\n",
					""
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"s1_M365 = stage1 + '/M365'\r\n",
					"s2_M365 = stage2 + '/M365'\r\n",
					"s3_M365 = stage3 + '/M365'\r\n",
					"\r\n",
					"M365_module_path = oea_path + '/modules/M365'\r\n",
					"s1_M365_activity = s1_M365 + '/activity'\r\n",
					"s1_M365_roster = s1_M365 + '/roster'"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Schemas"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"# Schema definitions\r\n",
					"M365_schemas = {}\r\n",
					"M365_schemas['TechActivity'] = StructType([StructField('SignalType', StringType()),StructField('StartTime', TimestampType()),StructField('UserAgent', StringType()),StructField('SignalId', StringType()),StructField('SisClassId', StringType()),StructField('ClassId', StringType()),StructField('ChannelId', StringType()),StructField('AppName', StringType()),StructField('ActorId', StringType()),StructField('ActorRole', StringType()),StructField('SchemaVersion', StringType()),StructField('AssignmentId', StringType()),StructField('SubmissionId', StringType()),StructField('Action', StringType()),StructField('DueDate', TimestampType()),StructField('ClassCreationDate', TimestampType()),StructField('Grade', StringType()),StructField('SourceFileExtension', StringType()),StructField('MeetingDuration', IntegerType())])\r\n",
					"M365_schemas['AadUser'] = StructType([StructField('ObjectId', StringType()),StructField('AnchorId', StringType()),StructField('DisplayName', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('GivenName', StringType()),StructField('LastSeenDateTime', TimestampType()),StructField('Mail', StringType()),StructField('MailNickname', StringType()),StructField('Role', StringType()),StructField('Surname', StringType()),StructField('UserPrincipalName', StringType()),StructField('StudentId', StringType()),StructField('TeacherId', StringType())])\r\n",
					"M365_schemas['AadUserPersonMapping'] = StructType([StructField('ObjectId', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('LastSeenDateTime', TimestampType()),StructField('PersonId', StringType())])\r\n",
					"M365_schemas['Course'] = StructType([StructField('Id', StringType()),StructField('AcademicYearSessionId', StringType()),StructField('ExternalId', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('IsActiveInSession', BooleanType()),StructField('LastSeenDateTime', TimestampType()),StructField('Name', StringType()),StructField('OrganizationId', StringType()),StructField('SourceSystemId', StringType()),StructField('Code', StringType())])\r\n",
					"M365_schemas['CourseGradeLevel'] = StructType([StructField('Id', StringType()),StructField('CourseId', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('RefGradeLevelId', StringType())])\r\n",
					"M365_schemas['CourseSubject'] = StructType([StructField('Id', StringType()),StructField('CourseId', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('RefAcademicSubjectId', StringType())])\r\n",
					"M365_schemas['Enrollment'] = StructType([StructField('Id', StringType()),StructField('ExternalId', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('IsActiveInSession', BooleanType()),StructField('LastSeenDateTime', TimestampType()),StructField('PersonId', StringType()),StructField('RefSectionRoleId', StringType()),StructField('SectionId', StringType()),StructField('SourceSystemId', StringType()),StructField('EntryDate', StringType()),StructField('ExitDate', StringType()),StructField('IsPrimaryStaffForSection', BooleanType())])\r\n",
					"M365_schemas['Organization'] = StructType([StructField('Id', StringType()),StructField('ExternalId', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('LastSeenDateTime', TimestampType()),StructField('Name', StringType()),StructField('RefOrganizationTypeId', StringType()),StructField('SourceSystemId', StringType()),StructField('Identifier', StringType()),StructField('ParentOrganizationId', StringType())])\r\n",
					"M365_schemas['Person'] = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('LastSeenDateTime', TimestampType()),StructField('GivenName', StringType()),StructField('MiddleName', StringType()),StructField('PreferredGivenName', StringType()),StructField('PreferredMiddleName', StringType()),StructField('PreferredSurname', StringType()),StructField('Surname', StringType())])\r\n",
					"M365_schemas['PersonDemographic'] = StructType([StructField('PersonId', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('BirthCity', StringType()),StructField('BirthCountryCode', StringType()),StructField('BirthDate', StringType()),StructField('BirthState', StringType()),StructField('RefSexId', StringType())])\r\n",
					"M365_schemas['PersonDemographicEthnicity'] = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('PersonId', StringType()),StructField('RefEthnicityId', StringType())])\r\n",
					"M365_schemas['PersonDemographicPersonFlag'] = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('PersonId', StringType()),StructField('RefPersonFlagId', StringType())])\r\n",
					"M365_schemas['PersonDemographicRace'] = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('PersonId', StringType()),StructField('RefRaceId', StringType())])\r\n",
					"M365_schemas['PersonEmailAddress'] = StructType([StructField('Id', StringType()),StructField('EmailAddress', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('PersonId', StringType()),StructField('PriorityOrder', IntegerType()),StructField('RefEmailAddressTypeId', StringType())])\r\n",
					"M365_schemas['PersonIdentifier'] = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('Identifier', StringType()),StructField('IsPresentInSource', BooleanType()),StructField('PersonId', StringType()),StructField('RefIdentifierTypeId', StringType()),StructField('SourceSystemId', StringType())])\r\n",
					"M365_schemas['PersonOrganizationRole'] = StructType([StructField('Id', StringType()),StructField('ExternalId', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('IsActiveInSession', BooleanType()),StructField('LastSeenDateTime', TimestampType()),StructField('OrganizationId', StringType()),StructField('PersonId', StringType()),StructField('RefRoleId', StringType()),StructField('SessionId', StringType()),StructField('SourceSystemId', StringType()),StructField('IsPrimary', BooleanType()),StructField('RefGradeLevelId', StringType()),StructField('RoleEndDate', StringType()),StructField('RoleStartDate', StringType())])\r\n",
					"M365_schemas['PersonPhoneNumber'] = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('PersonId', StringType()),StructField('PhoneNumber', StringType()),StructField('PriorityOrder', IntegerType()),StructField('RefPhoneNumberTypeId', StringType())])\r\n",
					"M365_schemas['PersonRelationship'] = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('PersonId', StringType()),StructField('RefPersonRelationshipId', StringType()),StructField('RelatedPersonId', StringType())])\r\n",
					"M365_schemas['RefDefinition'] = StructType([StructField('Id', StringType()),StructField('Code', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('LastSeenDateTime', TimestampType()),StructField('Namespace', StringType()),StructField('RefType', StringType()),StructField('SortOrder', IntegerType())])\r\n",
					"M365_schemas['Section'] = StructType([StructField('Id', StringType()),StructField('ExternalId', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('LastSeenDateTime', TimestampType()),StructField('Name', StringType()),StructField('OrganizationId', StringType()),StructField('SourceSystemId', StringType()),StructField('Code', StringType()),StructField('CourseId', StringType()),StructField('Location', StringType())])\r\n",
					"M365_schemas['SectionGradeLevel'] = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('RefGradeLevelId', StringType()),StructField('SectionId', StringType())])\r\n",
					"M365_schemas['SectionSession'] = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('IsActiveInSession', BooleanType()),StructField('LastSeenDateTime', TimestampType()),StructField('SectionId', StringType()),StructField('SessionId', StringType())])\r\n",
					"M365_schemas['SectionSubject'] = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('RefAcademicSubjectId', StringType()),StructField('SectionId', StringType())])\r\n",
					"M365_schemas['Session'] = StructType([StructField('Id', StringType()),StructField('EndDate', StringType()),StructField('ExternalId', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('LastSeenDateTime', TimestampType()),StructField('Name', StringType()),StructField('RefAcademicYearId', StringType()),StructField('RefSessionTypeId', StringType()),StructField('SourceSystemId', StringType()),StructField('StartDate', StringType()),StructField('ParentSessionId', StringType())])\r\n",
					"M365_schemas['SourceSystem'] = StructType([StructField('Id', StringType()),StructField('FirstSeenDateTime', TimestampType()),StructField('LastSeenDateTime', TimestampType()),StructField('Name', StringType())])"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Functions"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"# Provides a small sample activity data set\r\n",
					"def get_sample_activity_data(entity):\r\n",
					"    df = spark.read.csv(M365_module_path + '/sample_data/small_samples/' + entity + '.csv', schema=M365_schemas[entity])\r\n",
					"    return df"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"# Process TechActivity data from stage1 into stage2 using structured streaming\r\n",
					"def process_activity(source_path=s1_M365_activity, dest_path=s2_M365):\r\n",
					"    df = spark.readStream.csv(source_path + '/*/*.csv', header='false', schema=M365_schemas['TechActivity'])\r\n",
					"    df = df.dropDuplicates(['SignalId'])\r\n",
					"    df = df.withColumn('year', year(col('StartTime'))).withColumn('month', month(col('StartTime')))\r\n",
					"\r\n",
					"    query = df.writeStream.format(\"delta\").outputMode(\"append\").trigger(once=True).option(\"checkpointLocation\", source_path + '/_checkpoints').partitionBy('year', 'month')\r\n",
					"    query.start(dest_path + '/TechActivity')"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"# Resets all TechActivity processing. This is intended for use during initial testing - use with caution\r\n",
					"# This function does the following:\r\n",
					"#  - deletes the _checkpoints dir from stage1/M365/activity\r\n",
					"#  - deletes the delta table at stage2/M365/TechActivity\r\n",
					"def reset_activity_processing():\r\n",
					"    # Delete stage2/M365/TechActivity if it exists\r\n",
					"    items = mssparkutils.fs.ls(s2_M365)\r\n",
					"    #print(file.name, file.isDir, file.isFile, file.path, file.size)\r\n",
					"    for item in items:\r\n",
					"        if item.name == 'TechActivity':\r\n",
					"            mssparkutils.fs.rm(s2_M365 + '/TechActivity', True)\r\n",
					"\r\n",
					"    items = mssparkutils.fs.ls(s1_M365 + '/activity')\r\n",
					"    for item in items:\r\n",
					"        if item.name == '_checkpoints':\r\n",
					"            mssparkutils.fs.rm(s1_M365 + '/activity/_checkpoints', True)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"from pyspark.sql.utils import AnalysisException\r\n",
					"def process_roster_entity(path, entity):\r\n",
					"    try:\r\n",
					"        #logger.debug(f\"[OEA] s1_to_s2: source_path={source_path}, destination_path={destination_path}\")\r\n",
					"        df = spark.read.csv(path + '/' + entity, header='false', schema=M365_schemas[entity])\r\n",
					"        df.write.format('delta').mode('overwrite').option(\"mergeSchema\", \"true\").save(s2_M365 + '/' + entity)\r\n",
					"    except (AnalysisException) as error:\r\n",
					"        logger.exception(\"[OEA] \" + str(error))\r\n",
					"        logger.warning(\"[OEA] Warning: \" + str(error))\r\n",
					"\r\n",
					"def process_roster_date_folder(date_folder_path):\r\n",
					"    process_roster_entity(date_folder_path, 'AadUser')\r\n",
					"    process_roster_entity(date_folder_path, 'AadUserPersonMapping')\r\n",
					"    process_roster_entity(date_folder_path, 'Course')\r\n",
					"    process_roster_entity(date_folder_path, 'CourseGradeLevel')\r\n",
					"    process_roster_entity(date_folder_path, 'CourseSubject')\r\n",
					"    process_roster_entity(date_folder_path, 'Enrollment')\r\n",
					"    process_roster_entity(date_folder_path, 'Organization')\r\n",
					"    process_roster_entity(date_folder_path, 'Person')\r\n",
					"    process_roster_entity(date_folder_path, 'PersonDemographic')\r\n",
					"    process_roster_entity(date_folder_path, 'PersonDemographicEthnicity')\r\n",
					"    process_roster_entity(date_folder_path, 'PersonDemographicPersonFlag')\r\n",
					"    process_roster_entity(date_folder_path, 'PersonDemographicRace')\r\n",
					"    process_roster_entity(date_folder_path, 'PersonEmailAddress')\r\n",
					"    process_roster_entity(date_folder_path, 'PersonIdentifier')\r\n",
					"    process_roster_entity(date_folder_path, 'PersonOrganizationRole')\r\n",
					"    process_roster_entity(date_folder_path, 'PersonPhoneNumber')\r\n",
					"    process_roster_entity(date_folder_path, 'PersonRelationship')\r\n",
					"    process_roster_entity(date_folder_path, 'RefDefinition')\r\n",
					"    process_roster_entity(date_folder_path, 'Section')\r\n",
					"    process_roster_entity(date_folder_path, 'SectionGradeLevel')\r\n",
					"    process_roster_entity(date_folder_path, 'SectionSession')\r\n",
					"    process_roster_entity(date_folder_path, 'SectionSubject')\r\n",
					"    process_roster_entity(date_folder_path, 'Session')\r\n",
					"    process_roster_entity(date_folder_path, 'SourceSystem')"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"def process_roster():\r\n",
					"    logger.info(\"[OEA] Processing M365 roster data from: \" + inbound_path)\r\n",
					"\r\n",
					"    items = mssparkutils.fs.ls(s1_M365 + '/roster')\r\n",
					"    for item in items:\r\n",
					"        if item.isDir:\r\n",
					"            process_roster_date_folder(item.path)\r\n",
					"            mssparkutils.fs.mv(item.path, s1_M365 + '/roster_processed/', True)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"def reset_roster_processing():\r\n",
					"\r\n",
					"    if path_exists(stage2 + '/M365'):\r\n",
					"        # Delete roster delta tables (everything other than TechActivity)\r\n",
					"        items = mssparkutils.fs.ls(stage2 + '/M365')\r\n",
					"        #print(file.name, file.isDir, file.isFile, file.path, file.size)\r\n",
					"        for item in items:\r\n",
					"            if item.name != 'TechActivity':\r\n",
					"                mssparkutils.fs.rm(item.path, True)\r\n",
					"\r\n",
					"    if path_exists(stage1 + '/M365/roster_processed'):\r\n",
					"        # Move roster data back in to \"inbound\" folder\r\n",
					"        items = mssparkutils.fs.ls(stage1 + '/M365/roster_processed')\r\n",
					"        for item in items:\r\n",
					"            mssparkutils.fs.mv(item.path, stage1 + '/M365/roster', True)"
				],
				"execution_count": null
			}
		]
	}
}